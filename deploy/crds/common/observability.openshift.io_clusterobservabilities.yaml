---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: clusterobservabilities.observability.openshift.io
spec:
  group: observability.openshift.io
  names:
    kind: ClusterObservability
    listKind: ClusterObservabilityList
    plural: clusterobservabilities
    singular: clusterobservability
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterObservability defines the desired state of the observability
          stack.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of the cluster observability.
            properties:
              capabilities:
                description: |-
                  Capabilities defines the observability capabilities.
                  Each capability has to be enabled explicitly.
                properties:
                  opentelemetry:
                    description: OpenTelemetry defines the OpenTelemetry capabilities.
                    properties:
                      enabled:
                        default: false
                        description: |-
                          Enabled indicates whether the capability is enabled and it operator should deploy an instance.
                          By default, it is set to false.
                        type: boolean
                      exporter:
                        description: |-
                          Exporter defines the OpenTelemetry exporter configuration.
                          When defined the collector will export telemetry data to the specified endpoint.
                        properties:
                          endpoint:
                            description: Endpoint is the OTLP endpoint.
                            type: string
                        type: object
                      olm:
                        default: false
                        description: |-
                          OLM indicates whether the operators used by the capability should be deployed via OLM.
                          When the capability is enabled, the OLM is set to true, otherwise it is set to false.
                        type: boolean
                    type: object
                  tracing:
                    description: Tracing defines the tracing capabilities.
                    properties:
                      enabled:
                        default: false
                        description: |-
                          Enabled indicates whether the capability is enabled and it operator should deploy an instance.
                          By default, it is set to false.
                        type: boolean
                      olm:
                        default: false
                        description: |-
                          OLM indicates whether the operators used by the capability should be deployed via OLM.
                          When the capability is enabled, the OLM is set to true, otherwise it is set to false.
                        type: boolean
                    type: object
                type: object
              storage:
                description: Storage defines the storage for the capabilities that
                  require a storage.
                properties:
                  secret:
                    description: SecretSpec defines the secret for the storage.
                    properties:
                      name:
                        description: Name is the name of the secret for the storage.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: Status of the signal manager.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
